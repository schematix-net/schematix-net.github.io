"use strict";(self.webpackChunkschematix_documentation=self.webpackChunkschematix_documentation||[]).push([[3435],{3905:function(e,t,n){n.d(t,{kt:function(){return p}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=s(n),m=r,h=p["".concat(c,".").concat(m)]||p[m]||u[m]||i;return n?a.createElement(h,o(o({ref:t},d),{},{components:n})):a.createElement(h,o({ref:t},d))}));function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5223:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return u},default:function(){return p}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],l={id:"tutorial",title:"Tutorial",sidebar_label:"Tutorial"},c=void 0,s={unversionedId:"getting_started/tutorial",id:"getting_started/tutorial",isDocsHomePage:!1,title:"Tutorial",description:"Overview",source:"@site/docs/getting_started/tutorial.md",sourceDirName:"getting_started",slug:"/getting_started/tutorial",permalink:"/docs/getting_started/tutorial",editUrl:"https://github.com/schematix-net/schematix-documentation/edit/master/website/docs/getting_started/tutorial.md",tags:[],version:"current",frontMatter:{id:"tutorial",title:"Tutorial",sidebar_label:"Tutorial"},sidebar:"someSidebar",previous:{title:"Quick Start",permalink:"/docs/getting_started/quick_start"},next:{title:"Overview",permalink:"/docs/modules/overview"}},u=[{value:"Overview",id:"overview",children:[],level:2},{value:"Create Schema Definition",id:"create-schema-definition",children:[{value:"Example Data",id:"example-data",children:[],level:3},{value:"JSON Schema",id:"json-schema",children:[],level:3}],level:2},{value:"Generate data",id:"generate-data",children:[],level:2},{value:"Validate data",id:"validate-data",children:[],level:2}],d={toc:u};function p(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"In this tutorial we will walk through some of the key components of Schematix by\ndesigning a simplified way to exchange bank transaction records. "),(0,i.kt)("p",null,"In this guide you'll learn how to:  "),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Create a basic Schema Definition to exchange data"),(0,i.kt)("li",{parentName:"ol"},"Use this schema to generate data"),(0,i.kt)("li",{parentName:"ol"},"Validate the data using the newly created schema ")),(0,i.kt)("h2",{id:"create-schema-definition"},"Create Schema Definition"),(0,i.kt)("p",null,"The schema in Schematix is the core of the system. We'll use a\n",(0,i.kt)("a",{parentName:"p",href:"https://json-schema.org/learn/getting-started-step-by-step.html"},"JSON schema")," to create this definition.  "),(0,i.kt)("p",null,"Our (simplified) transaction schema will be used to describe bank statements, and will contain the following attributes:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,i.kt)("th",{parentName:"tr",align:null},"Data type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Transaction date"),(0,i.kt)("td",{parentName:"tr",align:null},"Datetime")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Reference"),(0,i.kt)("td",{parentName:"tr",align:null},"Text")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Amount"),(0,i.kt)("td",{parentName:"tr",align:null},"Decimal Number in USD")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Account"),(0,i.kt)("td",{parentName:"tr",align:null},"Accountnumber")))),(0,i.kt)("h3",{id:"example-data"},"Example Data"),(0,i.kt)("p",null,"The data we expect to work with will look like the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"transaction_date, description, amount, account\n2020-03-22 14:04:29,Groceries, 25.10, 091000019\n2020-02-28 08:53:19,Electricity Corp, 189.59, 021991814\n...\n")),(0,i.kt)("h3",{id:"json-schema"},"JSON Schema"),(0,i.kt)("p",null,"To start, we can use the Schematix initializer (run ",(0,i.kt)("inlineCode",{parentName:"p"},"schematix init")," and save the output to a file)\nor create an empty document called ",(0,i.kt)("inlineCode",{parentName:"p"},"transaction.schema.json")," using your favorite editor."),(0,i.kt)("p",null,"Then, copy the following content and save that into the newly created document:  "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "$schema": "http://json-schema.org/draft-07/schema#",\n  "$id": "http://example.com/product.schema.json",\n  "title": "Bank Statement",\n  "type": "object",\n  "properties": {\n    "transaction_date": {\n      "type": "string",\n      "format": "datetime"\n    },\n    "reference": {\n      "description": "The description for this transaction",\n      "type": "string"\n    },\n    "amount": {\n      "type": "number"\n    },\n    "account": {\n      "type": "string",\n      "pattern": "[0-9]{9}"\n    }\n  }\n}\n')),(0,i.kt)("p",null,"What we've done in the above schema is to create a technical representation of our earlier specification.\nThis schema will serve as the basis for our validation and generation process.  "),(0,i.kt)("h2",{id:"generate-data"},"Generate data"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./schematix generate-data transaction.schema.json --output=results.csv\n")),(0,i.kt)("h2",{id:"validate-data"},"Validate data"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./schematix validate results.csv transaction.schema.json\n")))}p.isMDXComponent=!0}}]);