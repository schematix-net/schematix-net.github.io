"use strict";(self.webpackChunkschematix_documentation=self.webpackChunkschematix_documentation||[]).push([[322],{3905:function(e,t,a){a.d(t,{kt:function(){return u}});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(a),h=i,m=u["".concat(s,".").concat(h)]||u[h]||p[h]||r;return a?n.createElement(m,o(o({ref:t},c),{},{components:a})):n.createElement(m,o({ref:t},c))}));function u(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var d=2;d<r;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},1430:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return p},default:function(){return u}});var n=a(7462),i=a(3366),r=(a(7294),a(3905)),o=["components"],l={id:"validation",title:"Validation",sidebar_label:"Validation"},s=void 0,d={unversionedId:"modules/validation",id:"modules/validation",isDocsHomePage:!1,title:"Validation",description:"Validation",source:"@site/docs/modules/validation.md",sourceDirName:"modules",slug:"/modules/validation",permalink:"/docs/modules/validation",editUrl:"https://github.com/schematix-net/schematix-documentation/edit/master/website/docs/modules/validation.md",tags:[],version:"current",frontMatter:{id:"validation",title:"Validation",sidebar_label:"Validation"},sidebar:"someSidebar",previous:{title:"Overview",permalink:"/docs/modules/overview"},next:{title:"Data Generation",permalink:"/docs/modules/data-generation"}},p=[{value:"Validation",id:"validation",children:[{value:"Overview",id:"overview",children:[],level:3},{value:"Concepts",id:"concepts",children:[],level:3},{value:"Basic usage",id:"basic-usage",children:[{value:"Validating CSV files",id:"validating-csv-files",children:[],level:4},{value:"Validating Fixed Width files",id:"validating-fixed-width-files",children:[],level:4}],level:3},{value:"Reports",id:"reports",children:[{value:"Console report",id:"console-report",children:[],level:4},{value:"CSV report",id:"csv-report",children:[],level:4},{value:"JSON report",id:"json-report",children:[],level:4},{value:"HTML report",id:"html-report",children:[],level:4}],level:3},{value:"Advanced usage",id:"advanced-usage",children:[{value:"Skipping header and footers",id:"skipping-header-and-footers",children:[],level:4}],level:3}],level:2}],c={toc:p};function u(e){var t=e.components,l=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,n.Z)({},c,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"validation"},"Validation"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Effective business intelligence efforts starts with high quality data -- Simran Jindal, IBM")),(0,r.kt)("h3",{id:"overview"},"Overview"),(0,r.kt)("p",null,"Data quality is an important aspect for any business process. Having correct data is essential to make the appropriate\ndecisions and as such, a high data quality is one of the top assets a company can have."),(0,r.kt)("p",null,"To ensure that the correct data ends up in a system, the quality of the data needs to be as high as possible\nbefore loading the data into any of the target systems. In other words, the data needs to be verified at the gate."),(0,r.kt)("p",null,"Schematix Validation provides a wide range of possibilities to support such scenarios.\nUsing a standard, centrally managed data schemas, validating data is a fast and easy process,\nno matter the amount of data being processed."),(0,r.kt)("h3",{id:"concepts"},"Concepts"),(0,r.kt)("p",null,"Schematix Validator can validate input data in numerous formats, such as pipe delimited formated, comma separated files (CSV),\nfixed width formats, JSON, XML and even binary data, all from a common, programming language agnostic. schema."),(0,r.kt)("p",null,"In order to validate data, the following concepts are defined within the validation process:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Input data"),(0,r.kt)("li",{parentName:"ul"},"The validation schema"),(0,r.kt)("li",{parentName:"ul"},"The mapping file (required for fixed width mapping only)"),(0,r.kt)("li",{parentName:"ul"},"Validation reports")),(0,r.kt)("h3",{id:"basic-usage"},"Basic usage"),(0,r.kt)("p",null,"The simplest way to validate an input file is as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"./schematix validate input.csv example.schema.json\n")),(0,r.kt)("p",null,"This validates the input file (",(0,r.kt)("inlineCode",{parentName:"p"},"input.csv"),") using a validation schema (",(0,r.kt)("inlineCode",{parentName:"p"},"example.schema.json"),") which\nwill contain the validation rules specific to this input file. Any records which do not adhere to the rules\ndefined will be marked invalid and listed in the output report."),(0,r.kt)("h4",{id:"validating-csv-files"},"Validating CSV files"),(0,r.kt)("p",null,"To valid a CSV file with transactions for example, the following command can be used:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"./schematix validate transactions.csv transactions.schema.json\n")),(0,r.kt)("p",null,"This will read the transaction comma separate data using the specified schema.\nAn output report will be displayed with the results of this validation. "),(0,r.kt)("h4",{id:"validating-fixed-width-files"},"Validating Fixed Width files"),(0,r.kt)("p",null,"To validate fixed width formats using a schema, an extra mapping file is needed to define the mapping between the\nschema definitions and the input format. "),(0,r.kt)("p",null,"For example, if the input has a format like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"2013-10-30  vQdpBmVCYMAr3ZWUST3lYxD  60.4075231\n")),(0,r.kt)("p",null,"Then this could mean that the input contains 3 fields (for example, the transaction date, the reference and the amount).\nIn the above input, the first 12 positions (10 plus 2 whitespace) are taken by the transaction date,\nfollowed by 25 characters for the reference, and finally 10 characters dfor the amount."),(0,r.kt)("p",null,"This leads to the following (simplified) mapping file: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "title": "Transaction mapping",\n  "type": "object",\n  "properties": {\n    "transaction_date": {\n      "width": 12\n    },\n    "reference": {\n      "width": 25\n    },\n    "amount": {\n      "width": 10\n    }\n  }\n}\n')),(0,r.kt)("p",null,"To use this file, the validator can be used in the following way:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"./schematix validate --mapping=transactions.mapping.json transactions.csv transactions.schema.json\n")),(0,r.kt)("p",null,"This will use the mapping file to validate the input, based on the supplied schema, and a report will be generated\nto output the results."),(0,r.kt)("h3",{id:"reports"},"Reports"),(0,r.kt)("p",null,"Schematix supports multiple validation reports, depending on your requirements:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#console-report"},"Console report")," - outputs to the console"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#csv-report"},"CSV report")," - creates a CSV report with the incorrect records "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#json-report"},"JSON report")," - creates a JSON report with the incorrect records"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#html-report"},"HTML report")," - creates a simple HTML report")),(0,r.kt)("h4",{id:"console-report"},"Console report"),(0,r.kt)("p",null,"By default, Schematix will show the validation output to the console, and will indicate which records are invalid\nand why."),(0,r.kt)("h4",{id:"csv-report"},"CSV report"),(0,r.kt)("p",null,"When a more structured output is neded, the CSV report can be used. It lists only the failed\nrecords with the original structure, plus 1 additional column which contains the error message(s)."),(0,r.kt)("h4",{id:"json-report"},"JSON report"),(0,r.kt)("p",null,"The JSON report is similar to the CSV report, but then in JSON format. It lists only the failed\nrecords with the original structure, plus 1 additional field which contains a list of error message(s)."),(0,r.kt)("h4",{id:"html-report"},"HTML report"),(0,r.kt)("p",null,"A simple HTML report which will visually indicate which records were valid or invalid.\nAn example of such a report can be seen below:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Simple Validation Report",src:a(9939).Z})),(0,r.kt)("h3",{id:"advanced-usage"},"Advanced usage"),(0,r.kt)("p",null,"Schematix Validation provides more ways to customise the validation process.\nThis section will list most of them."),(0,r.kt)("h4",{id:"skipping-header-and-footers"},"Skipping header and footers"),(0,r.kt)("p",null,"When a file contains a header and/or footer which shouldn't be validated,\nit's possible to skip validation on them.\nYou can do so by specifying the number of lines to skip for either the header or footer, or both, like so:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"./schematix validate --header-count=1 --footer-count=3 transactions.csv transactions.schema.json\n")),(0,r.kt)("p",null,"In the above example, the first line and the last 3 lines will be excluded from validation."))}u.isMDXComponent=!0},9939:function(e,t,a){t.Z=a.p+"assets/images/simple_validation_report-1a2cce4cff4d2c43aed3348c9e98571e.png"}}]);